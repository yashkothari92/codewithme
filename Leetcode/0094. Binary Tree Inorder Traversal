LC#94. Binary Tree Inorder Traversal  (Medium)

    public List<Integer> inorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        List<Integer> list = new ArrayList<>();
//         if(root == null){
// 			return null;
// 		}
		
// 		inorderTraversal(root.left);
// 		list.add(root.val);
// 		inorderTraversal(root.right);
		
// 		return list;
        
        stack = addNodeToStack(stack, root);
        
        while(!stack.isEmpty()) {
            TreeNode node = stack.pop();
            list.add(node.val);
            TreeNode right = node.right;
            stack = addNodeToStack(stack, right);
        }
        
        return list;
    }
    
    public Stack<TreeNode> addNodeToStack (Stack<TreeNode> stack, TreeNode root) {
        while(root != null) {
            stack.push(root);
            root = root.left;
        }
        
        return stack;
    }
