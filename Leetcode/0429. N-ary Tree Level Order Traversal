LC#429. N-ary Tree Level Order Traversal  (Medium)

Given an n-ary tree, return the level order traversal of its nodes' values.
Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

Example 1:  (https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png)
  Input: root = [1,null,3,2,4,null,5,6]
  Output: [[1],[3,2,4],[5,6]]

Example 2: (https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png)
  Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]
  Output: [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]
------------------- ------------------- -------------------
public List<List<Integer>> levelOrder(Node root) {
    List<List<Integer>> lists = new ArrayList<>();
    List<Integer> subList;
    Queue<Node> queue = new LinkedList<>();

    if(root == null)
        return lists;

    queue.add(root);

    while(true) {
        int levels = queue.size();
        if(levels == 0)
            break;

        subList = new ArrayList<>();
        while(levels > 0) {
            Node current = queue.remove();
            subList.add(current.val);
            
            // iterate over all the children
            for(Node child: current.children) {
                queue.add(child);
            }
            levels --;
        }
        lists.add(subList);
    }

    return lists;
}
